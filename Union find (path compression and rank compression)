int find(int x, vector<int>& parent){
      if (parent[x] != x) parent[x] = find(parent[x],parent);
      return parent[x];
}
    
void union(int x, int y,vector<int>& parent){
    int xset = find(x,parent);
    int yset = find(y,parent);
    if (xset == yset)
        return;
    if (rank[xset] < rank[yset]) {
        parent[xset] = yset;
    }
    else if (rank[xset] > rank[yset]) {
        parent[yset] = xset;
    }
    else {
        parent[yset] = xset;
        rank[xset] = rank[xset] + 1;
    }
}
  
int main()
{
    vector<int> parent(n);
    for(int i=0;i<n;i++){
        parent[i]=i;
    }
    
    union(0, 2,parent);
    union(4, 2,parent);
    union(3, 1,parent);
    
    if (find(4,parent) == find(0,parent))
        cout << "Yes\n";
    else
        cout << "No\n";
    return 0;
}
